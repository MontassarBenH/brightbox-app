name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  unit-and-e2e-local:
    name: Unit + E2E (local server)
    runs-on: ubuntu-latest
    env:
      # Needed for your Next.js app to boot during local E2E
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
      # Optional: available to tests if you ever need them locally
      E2E_TEST_EMAIL: ${{ secrets.E2E_TEST_EMAIL }}
      E2E_TEST_PASSWORD: ${{ secrets.E2E_TEST_PASSWORD }}
      E2E_TEST_USER_ID: ${{ secrets.E2E_TEST_USER_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      # ---- UNIT (Vitest)
      - name: Run unit tests (Vitest)
        run: npm run test --silent

      # ---- E2E (Playwright) against local dev server
      - name: Run E2E (Playwright, local)
        run: npx playwright test

      - name: Upload Playwright report (local)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-local
          path: playwright-report
          if-no-files-found: ignore
          retention-days: 7

  e2e-live:
    name: E2E (live Vercel)
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    env:
      # Tell Playwright to hit your deployed site & skip starting a dev server
      E2E_BASE_URL: https://brightbox-app.vercel.app
      PLAYWRIGHT_NO_SERVER: '1'
      # Test credentials (must exist in repo Secrets)
      E2E_TEST_EMAIL: ${{ secrets.E2E_TEST_EMAIL }}
      E2E_TEST_PASSWORD: ${{ secrets.E2E_TEST_PASSWORD }}
      E2E_TEST_USER_ID: ${{ secrets.E2E_TEST_USER_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Sanity check env presence (no values printed)
        run: |
          node -e "console.log('HAS_EMAIL', !!process.env.E2E_TEST_EMAIL, 'HAS_PASS', !!process.env.E2E_TEST_PASSWORD, 'HAS_ID', !!process.env.E2E_TEST_USER_ID)"

      - name: Run E2E (Playwright, live)
        run: npx playwright test

      - name: Upload Playwright report (live)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-live
          path: playwright-report
          if-no-files-found: ignore
          retention-days: 7

  notify:
    name: Send notification
    runs-on: ubuntu-latest
    needs: [unit-and-e2e-local, e2e-live]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Compute combined status
        id: status
        run: |
          if [[ "${{ needs.unit-and-e2e-local.result }}" == "success" && \
                "${{ needs.e2e-live.result }}" == "success" ]]; then
            echo "value=✅ SUCCESS" >> "$GITHUB_OUTPUT"
          else
            echo "value=❌ FAILED" >> "$GITHUB_OUTPUT"
          fi

      - name: Send to n8n (on success only)
        if: steps.status.outputs.value == 'SUCCESS'
        run: |
          cat > body.json <<JSON
          {
            "status": "✅ SUCCESS",
            "repo": "${{ github.repository }}",
            "branch": "${{ github.ref_name }}",
            "commit": "${{ github.sha }}",
            "run_url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
            "tests": "Local: ${{ needs.unit-and-e2e-local.result }} | Live: ${{ needs.e2e-live.result }}"
          }
          JSON
          curl -sS -X POST "${{ secrets.N8N_WEBHOOK_URL }}" \
            -H "Content-Type: application/json" \
            --data @body.json
